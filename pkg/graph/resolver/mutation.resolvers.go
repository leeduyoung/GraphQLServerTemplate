package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"

	"github.com/leeduyoung/GraphQLServerTemplate/pkg/graph/dto"
	"github.com/leeduyoung/GraphQLServerTemplate/pkg/graph/gen"
	"github.com/leeduyoung/GraphQLServerTemplate/pkg/graph/gen/graphqlmodel"
	"github.com/leeduyoung/GraphQLServerTemplate/pkg/logger"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input graphqlmodel.NewUser) (*graphqlmodel.User, error) {
	response, err := r.srv.User.CreateUser(ctx, input)
	if err != nil {
		logger.Error(err)
		return nil, err
	}

	return dto.NewUserDto(response), nil
}

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input graphqlmodel.NewTodo) (*graphqlmodel.Todo, error) {
	response, err := r.srv.Todo.CreateTodo(ctx, input)
	if err != nil {
		logger.Error(err)
		return nil, err
	}

	return dto.NewTodoDto(response), nil
}

// Mutation returns gen.MutationResolver implementation.
func (r *Resolver) Mutation() gen.MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
